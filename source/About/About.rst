==============================
システムエンジニアリングとSysML
==============================

システムエンジニアリングとは
==========================

私たちの身の回りには、多くのシステムがある。
人間が作り上げたシステムもあれば、生命体のような自然の産物もある。
人が属する様々な組織もまた、システムと考えることができる。
ではシステムとは何だろうか。
システムは、「相互に関係しあう要素群から構成され、ある目的のために機能する、まとまりや仕組み」といった抽象的な概念を指す。
プラント、ジェット機、複合機等もこうしたシステムとして捉えることができる。
このような人工のシステムは、一般にハードウェア、ソフトウェアや人から構成されているが、システムの概念はこれらを区別無く包含するものである。
システムエンジニアリングとは、このようなシステムを設計し管理するための学際的な工学分野である。
システムエンジニアリングによる設計において、一般にシステムは複数の要素に分解して捉えられる。
そしてそれらの個々の要素もまた更に分解される、というように複数段階にわたって分解が進められる。
分解の結果得られた要素は、ハードウェアやソフトウェア、人といった実現手段に対応付けられる。
各要素の間でやり取りされる様々な物や情報等も明確にされる。
システムエンジニアリングの一環として、システムの利害関係者が持つ様々な要求をどのように実現していくかも明確にされる。
利害関係者の要求がどのようにシステムレベルの要求に関係するかや、システムレベルの要求がどのようにシステムの構造や振る舞いによって満たされるか、といったことが明確にされる。
システムの構造や振る舞い等、様々な設計判断の候補群を評価して、どのようなシステムの形が最も望ましいかを判断することもシステムエンジニアリングの一環である。
そのための手段として各種シミュレーションを実施する。

システムモデリング
=================

システムモデリングとは、モデリングを通してシステムエンジニアリングを実践する活動である。
システムモデリングでは、モデリング言語を用いてモデルを作成しながら分析、設計を進める。
システムモデリングによって、例えば以下のようなことが可能になる。

技術分野を横断した連携
---------------------

ハードウェアやソフトウェアといった異なる技術分野の開発者が、共通の言語で記述された上流のシステム設計に従って開発を進めることにより、互いに整合性を維持しながら高いレベルのQCDを実現する。
非技術系を含む利害関係者と技術者との間で、直感的に理解しやすいグラフィカルなモデルを用いて効率的に理解の共有を進める。

国際的な共同開発
---------------

より人件費の安価な国の技術者や、特殊な技能を保有する海外の技術者と共同で開発を進めるため、文法が標準化されたモデリング言語を利用することで、自然言語の言葉の壁の問題を緩和し、共通の理解を促進する。

大規模・複雑なシステムの一貫性の確保
----------------------------------

大規模・複雑なシステムを開発する際には、多くの人員で構成された開発組織が開発に当たる。
このときに作成される多くの成果物に対し、一貫性・整合性を確保することが必要となる。
モデリングツールを用いて成果物のモデル情報を管理することで、自動的な情報の整合性確認も可能となる。

SysML とは
==========

SysMLは、システムを実現する際に効果を発揮するモデリング言語である。
システムの仕様化、分析、設計、妥当性確認や検証のために利用できる。
SysMLの適用分野の例として、自動車、航空宇宙、通信等がある。
SysMLは"OMG Systems Modeling Language" の略称である。
UMLと同様、OMG(Object Management Group) によって仕様が策定された。

SysMLの特徴として以下を挙げることができる。

グラフィカルなモデリング言語
--------------------------

SysMLはグラフィカルなモデリング言語である。
SysMLのモデルは直感的な理解が容易で、設計者の思考を助ける。

標準言語
--------

SysMLは標準の言語である。
のためSysMLによる設計では、担当者間でモデルの解釈に差が生じにくい。

コンパクトな言語仕様
-------------------

SysMLの言語仕様は、UMLをベースとしていながら、よりコンパクトである。
そのためSysMLは覚えやすく導入が容易である。

SysML の歴史
============

SysMLの策定には、システムエンジニアリングやモデリングに関係する以下の組織が関わった。

INCOSE : International Council on Systems Engineering

INCOSEは1990年に設立された非営利会員の組織である。
INCOSEの使命は、社会的必要を満たし技術的に適切な解決策を生み出すため、産業界、学術界、政府系におけるシステムエンジニアリングの発達を促進し実践することである。

OMG : Object Management Group

OMGは、1989年に設立された国際的でオープンな会員制をとるコンピュータ業界の非営利コンソーシアムである。
あらゆる組織がOMGに入会し、標準策定プロセスに参加できる。
SysMLの他、UML、CORBA、MDA等の標準を策定した。

SysML Partners

SysML Partnersは、システムエンジニアリング向けのUMLプロファイルを作成する目的で召集されたツールベンダや業界リーダーのグループである。
IBM社、モトローラ社、ボーイング社等が参加した。

これらの組織によってSysMLが策定されるまでの経緯は以下の通りである。

SysML とUML の関係
==================

SysMLの言語仕様は、UMLの言語仕様の一部を再利用した部分と、SysMLのために新たに拡張した部分とから構成される。
図1.2はSysMLとUMLの関係を示すベン図である。
図1.2の中で、SysMLとUMLを各々"SysML"、"UML" と書かれた円で表す。

「SysMLで再利用される部分」と書かれた、2つの円の交わる部分は、SysMLで利用可能なUML仕様の一部である。
「UMLに対するSysMLの拡張」と書かれた部分は、SysMLのために新たに定義された、UMLには無い部分、あるいはUMLの一部を置き換える部分である。
「SysMLで利用されない部分」と書かれた部分は、UMLの言語仕様のうち、SysMLでは必要とされなかった部分である。
このようにSysMLでは、UML仕様の中でシステムエンジニアリングのために必要と思われる部分のみ再利用し、残りを採用しないことで、できる限りコンパクトな言語仕様を実現している。
また、システムエンジニアリング用モデリングに必要な仕様を新規に追加して言語を強化している。
SysMLに含まれる各種ダイアグラムの分類を図1.3に示す。

SysMLのダイアグラムは、大きく構造図、振る舞い図、要求図に分類される。
更に構造図と振る舞い図は、各々複数のダイアグラムに分類される。
また各ダイアグラムは、UML仕様との対比の観点から、「UMLと同じ」、「UMLから修正」、「新ダイアグラム」のいずれかに分類できる。
SysML独自のダイアグラムはパラメトリック図と要求図の2つである。
そして更に他の3つのダイアグラム(アクティビティ図、ブロック定義図、内部ブロック図)にも変更を加え、全体としてシステムエンジニアリングの用途に沿った言語仕様に仕上げている。

SysML の効果
============

SysMLは、システムエンジニアリングにどのような効果をもたらすだろうか。
ここでは前述したSysMLの特徴に着目して、SysMLの効果について述べる。

グラフィカルなモデリング言語
--------------------------

モデルを使って物事をグラフィカルに表現することで、様々な効果が得られる。
モデルを使うことによって、現実の事象の詳細にとらわれ過ぎない、物事の抽象的な捉え方が容易になる。
また、構造や振る舞い等、複数の異なる視点からモデル化することで、一面的な思考にとらわれずに物事を多面的に捉え、多面的に分析できる。
物事をグラフィカルに可視化して表現することにより、より多くの物事やそれらの間の関係を、直感的に理解することが容易になる。
結果として、多くの物事の関係や物事の複雑さを、細分化、階層化する等して整理しやすくなる。
このように物事を整理して可視化することにより、SysML利用者の思考が促進されるため、より高度な成果が期待できる。

標準言語
--------

標準の言語を使うことで、情報の共有が容易になる。
例えばドキュメントを記述する際、いちいち表記方法や意味についての説明を記述しなくても、ドキュメントに対する理解を共有できる。
また、自然言語を異にする多文化圏をまたがった情報の共有が容易になる。
多くのツールが利用できる点も、標準の言語を使うことの長所だろう。
SysML対応のモデリングツールを使うと、ツールがSysMLモデルの構造を解釈するため、モデルの不整合や文法誤り等を検出することが可能になる。
ツールがシミュレーション等の高度な分析支援機能を提供している場合もある。

コンパクトな言語仕様
-------------------

システムを開発する上では、システム設計担当者、ハードウェア担当者、ソフトウェア担当者の間で、システムについての理解を共通化する必要がある。
UMLはこれまで主にソフトウェア開発の分野で活用されてきており、システム設計担当者やハードウェア担当者がUMLを知っていることは、通常期待できない。
SysMLの言語仕様はUMLに比べてコンパクトなため覚えやすい。
システム設計担当者、ハードウェア担当者、ソフトウェア担当者といった関係者がSysMLを利用することで、システムについての理解を共通化することが容易になる。

SysMLの各種ダイアグラム
======================

本節では、SysMLの各種ダイアグラムについて簡単に紹介する。
各ダイアグラムの詳細については、以降の各章で詳細に解説する。

ブロック定義図
--------------

SysMLにおいて、ブロックはシステムやその構成要素を表す単位である。
ブロック定義図では、ブロックの詳細やブロック間の関係を定義できる。
ブロックのみに限らず、SysMLのいくつかのダイアグラムを記述するには、あらかじめ使用したい要素の「型」を定義しておくことが必要である。
ブロック定義図は、様々な要素の「型」を定義することで、他のダイアグラムを利用するための基盤としての役割を果たすダイアグラムである。

内部ブロック図
--------------

内部ブロック図は、ブロックの内部構造を表現するためのダイアグラムである。
あるブロックが別の種類のブロック群から構成されることや、構成要素間の接続関係を表現できる。

パラメトリック図
----------------

パラメトリック図は、システムに現れる様々な値の間に成り立つ制約を、数式等を使って表現するためのダイアグラムである。
パラメトリック図を使って、システムの構造のいくつかのバリエーションに対して様々なトレードオフを分析できる。

アクティビティ図
----------------

アクティビティ図は、システムやその構成要素の振る舞いを表現するためのダイアグラムである。

使いどころ
^^^^^^^^^^

- 作業や処理がどのような順序で進むか
- どのような条件の時にどういった処理が実行されるか

要求図
-------

要求図は、システムが満たすべき要求や、要求間の関係を表現するためのダイアグラムである。

その他、UMLに含まれる以下のダイアグラムをSysMLでも利用できる。

パッケージ図
------------

パッケージは、ブロック等のモデル要素群をグループ化するためのモデル要素である。
パッケージ図は、パッケージやパッケージ間の関係を表現するためのダイアグラムである。

シーケンス図
------------

シーケンス図は、モデル要素間の相互作用を時系列的に示すことで、モデル要素の協調によって実現される振る舞いを表現するためのダイアグラムである。

ステートマシン図
----------------

ステートマシン図は、ブロック等が持つ状態や、可能な状態遷移の仕方を表現するためのダイアグラムである。

ユースケース図
--------------

ユースケース図は、システムの機能や、機能とシステム外部の要素との関係を表現するためのダイアグラムである。